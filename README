
= ======== =
= libzippp =
= ======== =

libzippp is a simple basic C++ wrapper around the libzip library.

= ============ =
= Compilation  =
= ============ =

0) make sure you have the following commands: g++ make tar wget

1) download and compile de libzip library with the following command:
	make libzip

2) then create the static and shared libraries of libzippp:
	make

3) you may want to run the tests:
	make tests

4) now you just have to include the src folder in your include path and
   link against libzippp.a or libzippp.so (do not forget to also link 
   against libzip libraries in lib/libzip-0.11.1/lib/.libs/).
   An example of compilation with g++ (note also the -lz at the end) :
   	g++ -I./lib/libzip-0.11.1/lib -I./src \
		main.cpp libzippp.a \
		lib/libzip-0.11.1/lib/.libs/libzip.a \
		-lz

= ===== =
= Usage =
= ===== =

The API is meant to be very straight forward. Some french explanations
can be found here: http://www.astorm.ch/blog

How to list and read files in an archive:

	#include "libzippp.h"
	using namespace libzippp;

	ZipArchive zf("archive.zip");
	zf.open(ZipArchive::READ_ONLY);

	vector<ZipEntry> entries = zf.getEntries();
	vector<ZipEntry>::iterator it;
	for(it=entries.begin() ; it!=entries.end(); ++it) {
		ZipEntry entry = *it;
		string name = entry.getName();
		int size = entry.getSize();

		//the length of binaryData will be size
		void* binaryData = entry.readAsBinary();

		//the length of textData will be size+1 (last char is \0)
		string textData = entry.readAsText();

		//...
	}

	zf.close();


How to read a specific entry from an archive:

	#include "libzippp.h"
	using namespace libzippp;

	ZipArchive zf("archive.zip");
	zf.open(ZipArchive::READ_ONLY);

        //direct way
	char* data = (char*)zf.readEntry("myFile.txt");
	string str1(data, entry.getSize());

        //indirect way
	ZipEntry entry = zf.getEntry("myFile.txt");
	string str2 = entry.readAsText();

	zf.close();


How to add data to an archive:

	#include "libzippp.h"
	using namespace libzippp;

	ZipArchive zf("archive.zip");
	zf.open(ZipArchive::WRITE);
	zf.addEntry("folder/subdir/");

	const char* textData = "Hello,World!";
	zf.addData("helloworld.txt", textData, 12);

	zf.close();


How to remove data from an archive:

	#include "libzippp.h"
	using namespace libzippp;

	ZipArchive zf("archive.zip");
	zf.open(ZipArchive::WRITE);
	zf.deleteEntry("myFile.txt");
	zf.deleteEntry("myDir/subDir/");
	zf.close();


= ====== =
= TODO   =
= ====== =

- Extra field handling
